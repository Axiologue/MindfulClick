{"version":3,"sources":["js/angular/app.js","js/angular/services/validate.js","js/angular/services/utils.js","js/angular/services/landingServices.js","js/angular/services/djangoAuth.js","js/angular/controllers/masterControllers.js","js/angular/controllers/landingControllers.js","auth/verifyemail.js","auth/userprofile.js","auth/signup.js","auth/passwordresetconfirm.js","auth/passwordreset.js","auth/login.js"],"names":["portal","angular","module","config","$resourceProvider","defaults","stripTrailingSlashes","service","message","minlength","maxlength","email","required","more_messages","demo","check_more_messages","name","error","this","validation_messages","field","form","error_bin","messages","e","$error","special_message","push","deduped_messages","forEach","el","i","indexOf","form_validation","substr","factory","$resource","BaseUrl","services","_landing","query","method","isArray","recentData","success","$q","$http","$cookies","$rootScope","API_URL","use_session","authenticated","authPromise","request","args","get","headers","common","Authorization","params","deferred","defer","url","data","withCredentials","toUpperCase","X-CSRFToken","csrftoken","Access-Control-Allow-Credentials","bind","status","resolve","console","log","non_field_errors","reject","promise","register","username","password1","password2","more","extend","login","password","djangoAuth","then","expires","Date","setDate","getDate","key","put","$broadcast","logout","remove","changePassword","new_password1","new_password2","resetPassword","profile","foobar","getTime","updateProfile","verify","confirmReset","uid","token","authenticationStatus","restrict","force","da","getAuthStatus","initialize","sessions","controller","$scope","Landing","populateRecent","response","events","tags","posts","length","link","product","id","company","run","$templateCache"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nvar portal = angular.module('portal', [\n    'ngResource',\n    'ui.bootstrap',\n    'ngAnimate'\n]);\n\nportal.config(['$resourceProvider',function($resourceProvider) {\n  $resourceProvider.defaults.stripTrailingSlashes = false;\n}]);\n\n","'use strict';\n\nangular.module('portal')\n  .service('Validate', [function Validate() {\n    return {\n        'message': {\n            'minlength': 'This value is not long enough.',\n            'maxlength': 'This value is too long.',\n            'email': 'A properly formatted email address is required.',\n            'required': 'This field is required.'\n        },\n        'more_messages': {\n            'demo': {\n                'required': 'Here is a sample alternative required message.'\n            }\n        },\n        'check_more_messages': function(name,error){\n            return (this.more_messages[name] || [])[error] || null;\n        },\n        validation_messages: function(field,form,error_bin){\n            var messages = [];\n            for(var e in form[field].$error){\n                if(form[field].$error[e]){\n                    var special_message = this.check_more_messages(field,e);\n                    if(special_message){\n                        messages.push(special_message);\n                    }else if(this.message[e]){\n                        messages.push(this.message[e]);\n                    }else{\n                        messages.push(\"Error: \" + e);\n                    }\n                }\n            }\n            var deduped_messages = [];\n            angular.forEach(messages, function(el, i){\n                if(deduped_messages.indexOf(el) === -1) deduped_messages.push(el);\n            });\n            if(error_bin){\n                error_bin[field] = deduped_messages;\n            }\n        },\n        'form_validation': function(form,error_bin){\n            for(var field in form){\n                if(field.substr(0,1) != \"$\"){\n                    this.validation_messages(field,form,error_bin);\n                }\n            }\n        }\n    };\n}]);\n","angular.module('portal')\n.factory('BaseUrl', [function () {\n    return 'https://api.axiologue.org';\n}]);\n","angular.module('portal')\n.factory('Landing', ['$resource', 'BaseUrl', function ($resource, BaseUrl) {\n  var services = {};\n\n  var _landing = $resource(BaseUrl + '/landing/recent/', {}, {\n    query: {method: 'GET', isArray: true}\n  });\n\n  services.recentData = function (success) {\n    return _landing.query(success);\n  };\n\n  return services;\n}]);\n","'use strict';\n\nangular.module('portal')\n  .service('djangoAuth', [\n        '$q',\n        '$http',\n        '$cookies',\n        '$rootScope',\n        'BaseUrl',\n        function djangoAuth($q, $http, $cookies, $rootScope,BaseUrl) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n    var service = {\n        /* START CUSTOMIZATION HERE */\n        // Change this to point to your Django REST Auth API\n        // e.g. /api/rest-auth  (DO NOT INCLUDE ENDING SLASH)\n        'API_URL': BaseUrl + 'rest-auth',\n        // Set use_session to true to use Django sessions to store security token.\n        // Set use_session to false to store the security token locally and transmit it as a custom header.\n        'use_session': false,\n        /* END OF CUSTOMIZATION */\n        'authenticated': null,\n        'authPromise': null,\n        'request': function(args) {\n            // Let's retrieve the token from the cookie, if available\n            if($cookies.get('token')){\n                $http.defaults.headers.common.Authorization = 'Token ' + $cookies.get('token');\n            }\n            // Continue\n            params = args.params || {};\n            args = args || {};\n            var deferred = $q.defer(),\n                url = this.API_URL + args.url,\n                method = args.method || \"GET\",\n                params = params,\n                data = args.data || {};\n            // Fire the request, as configured.\n            $http({\n                url: url,\n                withCredentials: this.use_session,\n                method: method.toUpperCase(),\n                headers: {'X-CSRFToken': $cookies.csrftoken,\n                          'Access-Control-Allow-Credentials': 'true'},\n                params: params,\n                data: data\n            })\n            .success(angular.bind(this,function(data, status, headers, config) {\n                deferred.resolve(data, status);\n            }))\n            .error(angular.bind(this,function(data, status, headers, config) {\n                console.log(\"error syncing with: \" + url);\n                // Set request status\n                if(data){\n                    data.status = status;\n                }\n                if(status === 0){\n                    if(data === \"\"){\n                        data = {};\n                        data.status = 0;\n                        data.non_field_errors = [\"Could not connect. Please try again.\"];\n                    }\n                    // or if the data is null, then there was a timeout.\n                    if(data === null){\n                        // Inject a non field error alerting the user\n                        // that there's been a timeout error.\n                        data = {};\n                        data.status = 0;\n                        data.non_field_errors = [\"Server timed out. Please try again.\"];\n                    }\n                }\n                deferred.reject(data, status, headers, config);\n            }));\n            return deferred.promise;\n        },\n        'register': function(username,password1,password2,email,more){\n            var data = {\n                'username':username,\n                'password1':password1,\n                'password2':password2,\n                'email':email\n            };\n            data = angular.extend(data,more);\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/\",\n                'data' :data\n            });\n        },\n        'login': function(username,password){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/login/\",\n                'data':{\n                    'username':username,\n                    'password':password,\n                }\n            }).then(function(data){\n                if(!djangoAuth.use_session){\n                    var expires = new Date();\n                    expires.setDate(expires.getDate() + 1);\n                    $http.defaults.headers.common.Authorization = 'Token ' + data.key;\n                    $cookies.put('token',data.key,{'expires':expires});\n                }\n                djangoAuth.authenticated = true;\n                $rootScope.$broadcast(\"djangoAuth.logged_in\", data);\n            });\n        },\n        'logout': function(){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/logout/\"\n            }).then(function(data){\n                delete $http.defaults.headers.common.Authorization;\n                $cookies.remove('token');\n                $cookies.remove('user')\n                djangoAuth.authenticated = false;\n                $rootScope.$broadcast(\"djangoAuth.logged_out\");\n            });\n        },\n        'changePassword': function(password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/change/\",\n                'data':{\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'resetPassword': function(email){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/\",\n                'data':{\n                    'email':email\n                }\n            });\n        },\n        'profile': function(){\n            return this.request({\n                'method': \"GET\",\n                'url': \"/user/\",\n                'params': { 'foobar': new Date().getTime() }\n            }); \n        },\n        'updateProfile': function(data){\n            return this.request({\n                'method': \"PATCH\",\n                'url': \"/user/\",\n                'data':data\n            }); \n        },\n        'verify': function(key){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/verify-email/\",\n                'data': {'key': key} \n            });            \n        },\n        'confirmReset': function(uid,token,password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/confirm/\",\n                'data':{\n                    'uid': uid,\n                    'token': token,\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'authenticationStatus': function(restrict, force){\n            // Set restrict to true to reject the promise if not logged in\n            // Set to false or omit to resolve when status is known\n            // Set force to true to ignore stored value and query API\n            restrict = restrict || false;\n            force = force || false;\n            if(this.authPromise === null || force){\n                this.authPromise = this.request({\n                    'method': \"GET\",\n                    'url': \"/user/\"\n                });\n            }\n            var da = this;\n            var getAuthStatus = $q.defer();\n            if(this.authenticated !== null && !force){\n                // We have a stored value which means we can pass it back right away.\n                if(this.authenticated === false && restrict){\n                    getAuthStatus.reject(\"User is not logged in.\");\n                }else{\n                    getAuthStatus.resolve();\n                }\n            }else{\n                // There isn't a stored value, or we're forcing a request back to\n                // the API to get the authentication status.\n                this.authPromise.then(function(){\n                    da.authenticated = true;\n                    getAuthStatus.resolve();\n                },function(){\n                    da.authenticated = false;\n                    if(restrict){\n                        getAuthStatus.reject(\"User is not logged in.\");\n                    }else{\n                        getAuthStatus.resolve();\n                    }\n                });\n            }\n            return getAuthStatus.promise;\n        },\n        'initialize': function(url, sessions){\n            this.API_URL = url;\n            this.use_session = sessions;\n            return this.authenticationStatus();\n        }\n\n    };\n    return service;\n  }]);\n\n\n","angular.module('portal')\n.controller('MasterCtrl', ['$scope', function ($scope) {\n\n}]);\n","angular.module('portal')\n.controller('RecentCtrl', ['$scope', 'Landing', function ($scope, Landing) {\n  var populateRecent = function (response) {\n    $scope.events = response[2].events;\n    $scope.tags = response[1].tags;\n    $scope.posts = response[0].posts;\n\n    for (var i=0; i<$scope.tags.length; i++) {\n      $scope.tags[i].link = $scope.tags[i].product ? '#/products/detail/' + $scope.tags[i].product.id : '#/companies/detail/' + $scope.tags[i].company.id\n    }\n  };\n\n  Landing.recentData(populateRecent);\n}]);\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/verifyemail.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"verifyEmail_view\" ng-controller=\"VerifyemailCtrl\"><div ng-if=\"success\" class=\"alert alert-success\">You have successfully verified your email address.</div><div ng-if=\"failure\" class=\"alert alert-warning\">Sorry, there\\'s been an error.</div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/userprofile.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><h2 class=\"light-header\">Edit Profile Information</h2><div id=\"userProfile_view\" ng-controller=\"UserprofileCtrl\"><div ng-if=\"complete == false\"><form role=\"form\" ng-if=\"authenticated\" name=\"userProfileForm\" ng-submit=\"updateProfile(userProfileForm, model)\" novalidate><div class=\"form-group\"><label for=\"id_first_name\">First Name</label><input name=\"first_name\" id=\"id_first_name\" class=\"form-control\" type=\"text\" ng-model=\"model.first_name\" placeholder=\"First Name\"></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.first_name\">{{error}}</div><div class=\"form-group\"><label for=\"id_last_name\">Last Name</label><input name=\"last_name\" id=\"id_last_name\" class=\"form-control\" type=\"text\" ng-model=\"model.last_name\" placeholder=\"Last Name\"></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.last_name\">{{error}}</div><div class=\"form-group\"><label for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" class=\"form-control\" type=\"email\" ng-model=\"model.email\" placeholder=\"Email\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><button type=\"submit\" ng-show=\"authenticated\" class=\"btn btn-primary\">Update Profile</button></form><div class=\"alert alert-warning\" ng-if=\"authenticated == false\">You need to be logged in to do this.</div></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You have updated your profile.</div></div></div><div id=\"passwordChange_view\" ng-controller=\"PasswordchangeCtrl\"><h2 class=\"light-header\">Change Password</h2><div ng-if=\"complete == false\"><form role=\"form\" ng-submit=\"changePassword(changePasswordForm)\" name=\"changePasswordForm\" ng-if=\"authenticated\" novalidate><div class=\"form-group\"><label for=\"id_password1\">New Password</label><input name=\"new_password1\" id=\"id_password1\" type=\"password\" ng-model=\"model.new_password1\" placeholder=\"New Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.new_password1\">{{error}}</div><div class=\"form-group\"><label for=\"id_password2\">Repeat Password</label><input name=\"new_password2\" id=\"id_password2\" type=\"password\" ng-model=\"model.new_password2\" placeholder=\"Repeat Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.new_password2\">{{error}}</div><button ng-show=\"authenticated\" type=\"submit\" class=\"btn btn-primary\">Change Password</button></form><div class=\"alert alert-warning\" ng-if=\"authenticated != true\">You need to be logged in to do this!</div></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You have changed your password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/signup.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"register_view\" ng-controller=\"RegisterCtrl\"><div ng-if=\"complete == false\"><h3 class=\"light-header\">Please Enter Your Registration Information:</h3><form role=\"form\" ng-if=\"authenticated != true\" name=\"registerForm\" ng-submit=\"register(registerForm)\" novalidate><div class=\"form-group\"><label class=\"sr-only\" for=\"id_first_name\">First Name (optional)</label><input name=\"first_name\" id=\"id_first_name\" class=\"form-control\" type=\"first_name\" ng-model=\"model.first_name\" placeholder=\"First Name\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_last_name\">Last Name (optional)</label><input name=\"last_name\" id=\"id_last_name\" class=\"form-control\" type=\"last_name\" ng-model=\"model.last_name\" placeholder=\"Last Name\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_username\">Username</label><input name=\"username\" id=\"id_username\" class=\"form-control\" type=\"username\" ng-model=\"model.username\" placeholder=\"Username\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" class=\"form-control\" type=\"email\" ng-model=\"model.email\" placeholder=\"Email\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><hr><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Password</label><input name=\"password1\" id=\"id_password1\" class=\"form-control\" type=\"password\" ng-model=\"model.password1\" placeholder=\"Password\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password1\">{{error}}</div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Repeat Password</label><input name=\"password\" id=\"id_password2\" class=\"form-control\" type=\"password\" ng-model=\"model.password2\" placeholder=\"Repeat Password\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password2\">{{error}}</div><button ng-hide=\"authenticated\" type=\"submit\" class=\"btn btn-block btn-auth-orange\">Sign Up!</button></form><p ng-if=\"authenticated\">You are already logged in! You don\\'t need to register.</p></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">Great! You\\'ve just registered. You should receive an email shortly with instructions on how to activate your account.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/passwordresetconfirm.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"passwordResetConfirm_view\" ng-controller=\"PasswordresetconfirmCtrl\"><div ng-hide=\"complete\"><form role=\"form\" ng-hide=\"authenticated\" ng-submit=\"confirmReset(confirmResetForm)\" name=\"confirmResetForm\" novalidate><div class=\"form-group\"><label for=\"id_password1\">New Password</label><input name=\"password1\" id=\"id_password1\" type=\"password\" ng-model=\"model.new_password1\" placeholder=\"New Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password1\">{{error}}</div><div class=\"form-group\"><label for=\"id_password2\">Repeat Password</label><input name=\"password2\" id=\"id_password2\" type=\"password\" ng-model=\"model.new_password2\" placeholder=\"Repeat Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password2\">{{error}}</div><button type=\"submit\" ng-hide=\"authenticated\" class=\"btn btn-primary\">Reset Password</button></form><p ng-show=\"authenticated\">You are already logged in! You don\\'t need to reset your password.</p></div><div ng-show=\"complete\"><div class=\"alert alert-success\">You have changed your password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/passwordreset.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"passwordReset_view\" ng-controller=\"PasswordresetCtrl\"><div ng-if=\"complete == false\"><form role=\"form\" ng-if=\"authenticated != true\" name=\"passwordResetForm\" ng-submit=\"resetPassword(passwordResetForm)\" novalidate><div class=\"form-group\"><label for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" type=\"text\" ng-model=\"model.email\" placeholder=\"Email\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><button ng-hide=\"authenticated\" type=\"submit\" class=\"btn btn-primary\">Reset Password</button></form><p ng-if=\"authenticated\">You are already logged in! You don\\'t need to reset your password.</p></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You should receive an email shortly with instructions on how to reset your account password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/login.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\">\\'<div id=\"login_view\" ng-controller=\"LoginCtrl\"><h4 class=\"light-header\">Please Log In</h4><form role=\"form\" ng-submit=\"login(loginForm)\" name=\"loginForm\" novalidate><div class=\"form-group\"><label class=\"sr-only\" for=\"id_username\">Username</label><input name=\"username\" id=\"id_username\" type=\"text\" ng-model=\"model.username\" placeholder=\"Username\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Password</label><input name=\"password\" id=\"id_password\" type=\"password\" ng-model=\"model.password\" placeholder=\"Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.username\">{{error}}</div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password\">{{error}}</div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.non_field_errors\">{{error}}</div><div class=\"alert alert-danger\" ng-if=\"error\">{{error}}</div><p><button type=\"submit\" class=\"btn btn-block btn-succes\">Submit</button></p></form><div><p>Forgot your password? Click <a href=\"#/passwordReset\">here</a></p></div></div><hr><h4>Don\\'t have an Axiologue account? Sign up below!</h4><a href=\"#/signUp\" class=\"btn btn-block btn-primary\">Sign Up</a></div></div></div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}